[[parser.yy (info)] Line 344: 
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_statement_list procedure_name #0001 procedure_body
2: #0001 ->  <empty>
3: program ->  procedure_name #0002 procedure_body
4: #0002 ->  <empty>
5: procedure_name (NAME) ->  NAME '(' ')'
6: procedure_body ('{') ->  '{' declaration_statement_list #0003 basic_block_list '}'
7: #0003 ->  <empty>
8: procedure_body ('{') ->  '{' basic_block_list '}'
9: declaration_statement_list ->  declaration_statement_list declaration_statement
10: declaration_statement_list ->  declaration_statement
11: declaration_statement (INTEGER) ->  INTEGER identifier ';'
12: basic_block_list ->  basic_block_list basic_block
13: basic_block_list ->  basic_block
14: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' statement_list
15: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' statement_list ifelse_statement
16: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' ifelse_statement
17: statement_list ->  statement_list statement
18: statement_list ->  statement
19: statement ->  assignment_statement
20: statement ->  goto_statement
21: statement ->  return_statement
22: goto_statement (GOTO) ->  GOTO '<' NAME INTEGER_NUMBER '>' ';'
23: ifelse_statement (IF) ->  IF '(' expression ')' goto_statement ELSE goto_statement
24: expression ->  boolean_expression
25: less_than_expression ('<') ->  less_than_expression '<' arithmetic_expression
26: less_than_expression ('<') ->  less_than_expression '<' '=' arithmetic_expression
27: less_than_expression ->  arithmetic_expression
28: greater_than_expression ('>') ->  greater_than_expression '>' less_than_expression
29: greater_than_expression ('>') ->  greater_than_expression '>' '=' less_than_expression
30: greater_than_expression ->  less_than_expression
31: equality_expression ('=') ->  equality_expression '=' '=' greater_than_expression
32: equality_expression ('!') ->  equality_expression '!' '=' greater_than_expression
33: equality_expression ->  greater_than_expression
34: comparison_expression ->  equality_expression
35: basic_expression ('(') ->  '(' expression ')'
36: basic_expression ->  identifier
37: basic_expression ->  constant
38: not_expression ('!') ->  '!' not_expression
39: not_expression ->  basic_expression
40: and_expression ('&') ->  and_expression '&' '&' comparison_expression
41: and_expression ->  comparison_expression
42: or_expression ('|') ->  or_expression '|' '|' and_expression
43: or_expression ->  and_expression
44: boolean_expression ->  or_expression
45: mult_expression ('*') ->  mult_expression '*' not_expression
46: mult_expression ('/') ->  mult_expression '/' not_expression
47: mult_expression ->  not_expression
48: add_expression ('+') ->  add_expression '+' mult_expression
49: add_expression ('-') ->  add_expression '-' mult_expression
50: add_expression ->  mult_expression
51: arithmetic_expression ->  add_expression
52: assignment_statement ('=') ->  identifier '=' expression ';'
53: return_statement (RETURN) ->  RETURN ';'
54: identifier (NAME) ->  NAME
55: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
56: program_$ ->  program

[[parser.yy (info)] 
Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: NAME
   259: RETURN
   260: INTEGER
   261: IF
   262: ELSE
   263: GOTO
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    60: '<'
    62: '>'
    58: ':'
    61: '='
    33: '!'
    38: '&'
   124: '|'
    42: '*'
    47: '/'
    43: '+'
    45: '-'

[[parser.yy (info)] 
Grammar States: 
[[parser.yy (info)] State 0:
56: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_statement_list to state 2
  2:   On procedure_name to state 3
  3:   On declaration_statement to state 4
  4:   On NAME to state 5
  5:   On INTEGER to state 6


State 1:
56: program_$ -> program  . 


State 2:
1: program -> declaration_statement_list  . procedure_name #0001 procedure_body 
9: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On procedure_name to state 7
  1:   On declaration_statement to state 8
  2:   On NAME to state 5
  3:   On INTEGER to state 6


State 3:
3: program -> procedure_name  . #0002 procedure_body 
  0:   On #0002 to state 9
  Reduce by 4: #0002 ->  . 


State 4:
10: declaration_statement_list -> declaration_statement  . 
  Reduce by 10: declaration_statement_list -> declaration_statement  . 


State 5:
5: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 10


State 6:
11: declaration_statement -> INTEGER  . identifier ';' 
  0:   On identifier to state 11
  1:   On NAME to state 12


State 7:
1: program -> declaration_statement_list procedure_name  . #0001 procedure_body 
  0:   On #0001 to state 13
  Reduce by 2: #0001 ->  . 


State 8:
9: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 9: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 9:
3: program -> procedure_name #0002  . procedure_body 
  0:   On procedure_body to state 14
  1:   On '{' to state 15


State 10:
5: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 16


State 11:
11: declaration_statement -> INTEGER identifier  . ';' 
  0:   On ';' to state 17


State 12:
54: identifier -> NAME  . 
  Reduce by 54: identifier -> NAME  . 


State 13:
1: program -> declaration_statement_list procedure_name #0001  . procedure_body 
  0:   On procedure_body to state 18
  1:   On '{' to state 15


State 14:
3: program -> procedure_name #0002 procedure_body  . 
  Reduce by 3: program -> procedure_name #0002 procedure_body  . 


State 15:
6: procedure_body -> '{'  . declaration_statement_list #0003 basic_block_list '}' 
8: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 19
  1:   On basic_block_list to state 20
  2:   On declaration_statement to state 4
  3:   On basic_block to state 21
  4:   On INTEGER to state 6
  5:   On '<' to state 22


State 16:
5: procedure_name -> NAME '(' ')'  . 
  Reduce by 5: procedure_name -> NAME '(' ')'  . 


State 17:
11: declaration_statement -> INTEGER identifier ';'  . 
  Reduce by 11: declaration_statement -> INTEGER identifier ';'  . 


State 18:
1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 
  Reduce by 1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 


State 19:
6: procedure_body -> '{' declaration_statement_list  . #0003 basic_block_list '}' 
9: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0003 to state 23
  1:   On declaration_statement to state 8
  2:   On INTEGER to state 6
  Reduce by 7: #0003 ->  . 


State 20:
8: procedure_body -> '{' basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 24
  1:   On basic_block to state 25
  2:   On '<' to state 22


State 21:
13: basic_block_list -> basic_block  . 
  Reduce by 13: basic_block_list -> basic_block  . 


State 22:
14: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' statement_list 
15: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' statement_list ifelse_statement 
16: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' ifelse_statement 
  0:   On NAME to state 26


State 23:
6: procedure_body -> '{' declaration_statement_list #0003  . basic_block_list '}' 
  0:   On basic_block_list to state 27
  1:   On basic_block to state 21
  2:   On '<' to state 22


State 24:
8: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 8: procedure_body -> '{' basic_block_list '}'  . 


State 25:
12: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 12: basic_block_list -> basic_block_list basic_block  . 


State 26:
14: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' statement_list 
15: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' statement_list ifelse_statement 
16: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' ifelse_statement 
  0:   On INTEGER_NUMBER to state 28


State 27:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 29
  1:   On basic_block to state 25
  2:   On '<' to state 22


State 28:
14: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' statement_list 
15: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' statement_list ifelse_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' ifelse_statement 
  0:   On '>' to state 30


State 29:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 
  Reduce by 6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 


State 30:
14: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' statement_list 
15: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' statement_list ifelse_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' ifelse_statement 
  0:   On ':' to state 31


State 31:
14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . statement_list 
15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . statement_list ifelse_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . ifelse_statement 
  0:   On statement_list to state 32
  1:   On ifelse_statement to state 33
  2:   On statement to state 34
  3:   On IF to state 35
  4:   On assignment_statement to state 36
  5:   On goto_statement to state 37
  6:   On return_statement to state 38
  7:   On identifier to state 39
  8:   On GOTO to state 40
  9:   On RETURN to state 41
  10:   On NAME to state 12


State 32:
14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' statement_list  . 
15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' statement_list  . ifelse_statement 
17: statement_list -> statement_list  . statement 
  0:   On ifelse_statement to state 42
  1:   On statement to state 43
  2:   On IF to state 35
  3:   On assignment_statement to state 36
  4:   On goto_statement to state 37
  5:   On return_statement to state 38
  6:   On identifier to state 39
  7:   On GOTO to state 40
  8:   On RETURN to state 41
  9:   On NAME to state 12
  Reduce by 14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' statement_list  . 


State 33:
16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' ifelse_statement  . 
  Reduce by 16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' ifelse_statement  . 


State 34:
18: statement_list -> statement  . 
  Reduce by 18: statement_list -> statement  . 


State 35:
23: ifelse_statement -> IF  . '(' expression ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 44


State 36:
19: statement -> assignment_statement  . 
  Reduce by 19: statement -> assignment_statement  . 


State 37:
20: statement -> goto_statement  . 
  Reduce by 20: statement -> goto_statement  . 


State 38:
21: statement -> return_statement  . 
  Reduce by 21: statement -> return_statement  . 


State 39:
52: assignment_statement -> identifier  . '=' expression ';' 
  0:   On '=' to state 45


State 40:
22: goto_statement -> GOTO  . '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '<' to state 46


State 41:
53: return_statement -> RETURN  . ';' 
  0:   On ';' to state 47


State 42:
15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' statement_list ifelse_statement  . 
  Reduce by 15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' statement_list ifelse_statement  . 


State 43:
17: statement_list -> statement_list statement  . 
  Reduce by 17: statement_list -> statement_list statement  . 


State 44:
23: ifelse_statement -> IF '('  . expression ')' goto_statement ELSE goto_statement 
  0:   On expression to state 48
  1:   On boolean_expression to state 49
  2:   On or_expression to state 50
  3:   On and_expression to state 51
  4:   On comparison_expression to state 52
  5:   On equality_expression to state 53
  6:   On greater_than_expression to state 54
  7:   On less_than_expression to state 55
  8:   On arithmetic_expression to state 56
  9:   On add_expression to state 57
  10:   On mult_expression to state 58
  11:   On not_expression to state 59
  12:   On '!' to state 60
  13:   On basic_expression to state 61
  14:   On '(' to state 62
  15:   On identifier to state 63
  16:   On constant to state 64
  17:   On NAME to state 12
  18:   On INTEGER_NUMBER to state 65


State 45:
52: assignment_statement -> identifier '='  . expression ';' 
  0:   On expression to state 66
  1:   On boolean_expression to state 49
  2:   On or_expression to state 50
  3:   On and_expression to state 51
  4:   On comparison_expression to state 52
  5:   On equality_expression to state 53
  6:   On greater_than_expression to state 54
  7:   On less_than_expression to state 55
  8:   On arithmetic_expression to state 56
  9:   On add_expression to state 57
  10:   On mult_expression to state 58
  11:   On not_expression to state 59
  12:   On '!' to state 60
  13:   On basic_expression to state 61
  14:   On '(' to state 62
  15:   On identifier to state 63
  16:   On constant to state 64
  17:   On NAME to state 12
  18:   On INTEGER_NUMBER to state 65


State 46:
22: goto_statement -> GOTO '<'  . NAME INTEGER_NUMBER '>' ';' 
  0:   On NAME to state 67


State 47:
53: return_statement -> RETURN ';'  . 
  Reduce by 53: return_statement -> RETURN ';'  . 


State 48:
23: ifelse_statement -> IF '(' expression  . ')' goto_statement ELSE goto_statement 
  0:   On ')' to state 68


State 49:
24: expression -> boolean_expression  . 
  Reduce by 24: expression -> boolean_expression  . 


State 50:
44: boolean_expression -> or_expression  . 
42: or_expression -> or_expression  . '|' '|' and_expression 
  0:   On '|' to state 69
  Reduce by 44: boolean_expression -> or_expression  . 


State 51:
43: or_expression -> and_expression  . 
40: and_expression -> and_expression  . '&' '&' comparison_expression 
  0:   On '&' to state 70
  Reduce by 43: or_expression -> and_expression  . 


State 52:
41: and_expression -> comparison_expression  . 
  Reduce by 41: and_expression -> comparison_expression  . 


State 53:
34: comparison_expression -> equality_expression  . 
31: equality_expression -> equality_expression  . '=' '=' greater_than_expression 
32: equality_expression -> equality_expression  . '!' '=' greater_than_expression 
  0:   On '=' to state 71
  1:   On '!' to state 72
  Reduce by 34: comparison_expression -> equality_expression  . 


State 54:
33: equality_expression -> greater_than_expression  . 
28: greater_than_expression -> greater_than_expression  . '>' less_than_expression 
29: greater_than_expression -> greater_than_expression  . '>' '=' less_than_expression 
  0:   On '>' to state 73
  Reduce by 33: equality_expression -> greater_than_expression  . 


State 55:
30: greater_than_expression -> less_than_expression  . 
25: less_than_expression -> less_than_expression  . '<' arithmetic_expression 
26: less_than_expression -> less_than_expression  . '<' '=' arithmetic_expression 
  0:   On '<' to state 74
  Reduce by 30: greater_than_expression -> less_than_expression  . 


State 56:
27: less_than_expression -> arithmetic_expression  . 
  Reduce by 27: less_than_expression -> arithmetic_expression  . 


State 57:
51: arithmetic_expression -> add_expression  . 
48: add_expression -> add_expression  . '+' mult_expression 
49: add_expression -> add_expression  . '-' mult_expression 
  0:   On '+' to state 75
  1:   On '-' to state 76
  Reduce by 51: arithmetic_expression -> add_expression  . 


State 58:
50: add_expression -> mult_expression  . 
45: mult_expression -> mult_expression  . '*' not_expression 
46: mult_expression -> mult_expression  . '/' not_expression 
  0:   On '*' to state 77
  1:   On '/' to state 78
  Reduce by 50: add_expression -> mult_expression  . 


State 59:
47: mult_expression -> not_expression  . 
  Reduce by 47: mult_expression -> not_expression  . 


State 60:
38: not_expression -> '!'  . not_expression 
  0:   On not_expression to state 79
  1:   On '!' to state 60
  2:   On basic_expression to state 61
  3:   On '(' to state 62
  4:   On identifier to state 63
  5:   On constant to state 64
  6:   On NAME to state 12
  7:   On INTEGER_NUMBER to state 65


State 61:
39: not_expression -> basic_expression  . 
  Reduce by 39: not_expression -> basic_expression  . 


State 62:
35: basic_expression -> '('  . expression ')' 
  0:   On expression to state 80
  1:   On boolean_expression to state 49
  2:   On or_expression to state 50
  3:   On and_expression to state 51
  4:   On comparison_expression to state 52
  5:   On equality_expression to state 53
  6:   On greater_than_expression to state 54
  7:   On less_than_expression to state 55
  8:   On arithmetic_expression to state 56
  9:   On add_expression to state 57
  10:   On mult_expression to state 58
  11:   On not_expression to state 59
  12:   On '!' to state 60
  13:   On basic_expression to state 61
  14:   On '(' to state 62
  15:   On identifier to state 63
  16:   On constant to state 64
  17:   On NAME to state 12
  18:   On INTEGER_NUMBER to state 65


State 63:
36: basic_expression -> identifier  . 
  Reduce by 36: basic_expression -> identifier  . 


State 64:
37: basic_expression -> constant  . 
  Reduce by 37: basic_expression -> constant  . 


State 65:
55: constant -> INTEGER_NUMBER  . 
  Reduce by 55: constant -> INTEGER_NUMBER  . 


State 66:
52: assignment_statement -> identifier '=' expression  . ';' 
  0:   On ';' to state 81


State 67:
22: goto_statement -> GOTO '<' NAME  . INTEGER_NUMBER '>' ';' 
  0:   On INTEGER_NUMBER to state 82


State 68:
23: ifelse_statement -> IF '(' expression ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 83
  1:   On GOTO to state 40


State 69:
42: or_expression -> or_expression '|'  . '|' and_expression 
  0:   On '|' to state 84


State 70:
40: and_expression -> and_expression '&'  . '&' comparison_expression 
  0:   On '&' to state 85


State 71:
31: equality_expression -> equality_expression '='  . '=' greater_than_expression 
  0:   On '=' to state 86


State 72:
32: equality_expression -> equality_expression '!'  . '=' greater_than_expression 
  0:   On '=' to state 87


State 73:
28: greater_than_expression -> greater_than_expression '>'  . less_than_expression 
29: greater_than_expression -> greater_than_expression '>'  . '=' less_than_expression 
  0:   On less_than_expression to state 88
  1:   On '=' to state 89
  2:   On arithmetic_expression to state 56
  3:   On add_expression to state 57
  4:   On mult_expression to state 58
  5:   On not_expression to state 59
  6:   On '!' to state 60
  7:   On basic_expression to state 61
  8:   On '(' to state 62
  9:   On identifier to state 63
  10:   On constant to state 64
  11:   On NAME to state 12
  12:   On INTEGER_NUMBER to state 65


State 74:
25: less_than_expression -> less_than_expression '<'  . arithmetic_expression 
26: less_than_expression -> less_than_expression '<'  . '=' arithmetic_expression 
  0:   On arithmetic_expression to state 90
  1:   On '=' to state 91
  2:   On add_expression to state 57
  3:   On mult_expression to state 58
  4:   On not_expression to state 59
  5:   On '!' to state 60
  6:   On basic_expression to state 61
  7:   On '(' to state 62
  8:   On identifier to state 63
  9:   On constant to state 64
  10:   On NAME to state 12
  11:   On INTEGER_NUMBER to state 65


State 75:
48: add_expression -> add_expression '+'  . mult_expression 
  0:   On mult_expression to state 92
  1:   On not_expression to state 59
  2:   On '!' to state 60
  3:   On basic_expression to state 61
  4:   On '(' to state 62
  5:   On identifier to state 63
  6:   On constant to state 64
  7:   On NAME to state 12
  8:   On INTEGER_NUMBER to state 65


State 76:
49: add_expression -> add_expression '-'  . mult_expression 
  0:   On mult_expression to state 93
  1:   On not_expression to state 59
  2:   On '!' to state 60
  3:   On basic_expression to state 61
  4:   On '(' to state 62
  5:   On identifier to state 63
  6:   On constant to state 64
  7:   On NAME to state 12
  8:   On INTEGER_NUMBER to state 65


State 77:
45: mult_expression -> mult_expression '*'  . not_expression 
  0:   On not_expression to state 94
  1:   On '!' to state 60
  2:   On basic_expression to state 61
  3:   On '(' to state 62
  4:   On identifier to state 63
  5:   On constant to state 64
  6:   On NAME to state 12
  7:   On INTEGER_NUMBER to state 65


State 78:
46: mult_expression -> mult_expression '/'  . not_expression 
  0:   On not_expression to state 95
  1:   On '!' to state 60
  2:   On basic_expression to state 61
  3:   On '(' to state 62
  4:   On identifier to state 63
  5:   On constant to state 64
  6:   On NAME to state 12
  7:   On INTEGER_NUMBER to state 65


State 79:
38: not_expression -> '!' not_expression  . 
  Reduce by 38: not_expression -> '!' not_expression  . 


State 80:
35: basic_expression -> '(' expression  . ')' 
  0:   On ')' to state 96


State 81:
52: assignment_statement -> identifier '=' expression ';'  . 
  Reduce by 52: assignment_statement -> identifier '=' expression ';'  . 


State 82:
22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER  . '>' ';' 
  0:   On '>' to state 97


State 83:
23: ifelse_statement -> IF '(' expression ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 98


State 84:
42: or_expression -> or_expression '|' '|'  . and_expression 
  0:   On and_expression to state 99
  1:   On comparison_expression to state 52
  2:   On equality_expression to state 53
  3:   On greater_than_expression to state 54
  4:   On less_than_expression to state 55
  5:   On arithmetic_expression to state 56
  6:   On add_expression to state 57
  7:   On mult_expression to state 58
  8:   On not_expression to state 59
  9:   On '!' to state 60
  10:   On basic_expression to state 61
  11:   On '(' to state 62
  12:   On identifier to state 63
  13:   On constant to state 64
  14:   On NAME to state 12
  15:   On INTEGER_NUMBER to state 65


State 85:
40: and_expression -> and_expression '&' '&'  . comparison_expression 
  0:   On comparison_expression to state 100
  1:   On equality_expression to state 53
  2:   On greater_than_expression to state 54
  3:   On less_than_expression to state 55
  4:   On arithmetic_expression to state 56
  5:   On add_expression to state 57
  6:   On mult_expression to state 58
  7:   On not_expression to state 59
  8:   On '!' to state 60
  9:   On basic_expression to state 61
  10:   On '(' to state 62
  11:   On identifier to state 63
  12:   On constant to state 64
  13:   On NAME to state 12
  14:   On INTEGER_NUMBER to state 65


State 86:
31: equality_expression -> equality_expression '=' '='  . greater_than_expression 
  0:   On greater_than_expression to state 101
  1:   On less_than_expression to state 55
  2:   On arithmetic_expression to state 56
  3:   On add_expression to state 57
  4:   On mult_expression to state 58
  5:   On not_expression to state 59
  6:   On '!' to state 60
  7:   On basic_expression to state 61
  8:   On '(' to state 62
  9:   On identifier to state 63
  10:   On constant to state 64
  11:   On NAME to state 12
  12:   On INTEGER_NUMBER to state 65


State 87:
32: equality_expression -> equality_expression '!' '='  . greater_than_expression 
  0:   On greater_than_expression to state 102
  1:   On less_than_expression to state 55
  2:   On arithmetic_expression to state 56
  3:   On add_expression to state 57
  4:   On mult_expression to state 58
  5:   On not_expression to state 59
  6:   On '!' to state 60
  7:   On basic_expression to state 61
  8:   On '(' to state 62
  9:   On identifier to state 63
  10:   On constant to state 64
  11:   On NAME to state 12
  12:   On INTEGER_NUMBER to state 65


State 88:
28: greater_than_expression -> greater_than_expression '>' less_than_expression  . 
25: less_than_expression -> less_than_expression  . '<' arithmetic_expression 
26: less_than_expression -> less_than_expression  . '<' '=' arithmetic_expression 
  0:   On '<' to state 74
  Reduce by 28: greater_than_expression -> greater_than_expression '>' less_than_expression  . 


State 89:
29: greater_than_expression -> greater_than_expression '>' '='  . less_than_expression 
  0:   On less_than_expression to state 103
  1:   On arithmetic_expression to state 56
  2:   On add_expression to state 57
  3:   On mult_expression to state 58
  4:   On not_expression to state 59
  5:   On '!' to state 60
  6:   On basic_expression to state 61
  7:   On '(' to state 62
  8:   On identifier to state 63
  9:   On constant to state 64
  10:   On NAME to state 12
  11:   On INTEGER_NUMBER to state 65


State 90:
25: less_than_expression -> less_than_expression '<' arithmetic_expression  . 
  Reduce by 25: less_than_expression -> less_than_expression '<' arithmetic_expression  . 


State 91:
26: less_than_expression -> less_than_expression '<' '='  . arithmetic_expression 
  0:   On arithmetic_expression to state 104
  1:   On add_expression to state 57
  2:   On mult_expression to state 58
  3:   On not_expression to state 59
  4:   On '!' to state 60
  5:   On basic_expression to state 61
  6:   On '(' to state 62
  7:   On identifier to state 63
  8:   On constant to state 64
  9:   On NAME to state 12
  10:   On INTEGER_NUMBER to state 65


State 92:
48: add_expression -> add_expression '+' mult_expression  . 
45: mult_expression -> mult_expression  . '*' not_expression 
46: mult_expression -> mult_expression  . '/' not_expression 
  0:   On '*' to state 77
  1:   On '/' to state 78
  Reduce by 48: add_expression -> add_expression '+' mult_expression  . 


State 93:
49: add_expression -> add_expression '-' mult_expression  . 
45: mult_expression -> mult_expression  . '*' not_expression 
46: mult_expression -> mult_expression  . '/' not_expression 
  0:   On '*' to state 77
  1:   On '/' to state 78
  Reduce by 49: add_expression -> add_expression '-' mult_expression  . 


State 94:
45: mult_expression -> mult_expression '*' not_expression  . 
  Reduce by 45: mult_expression -> mult_expression '*' not_expression  . 


State 95:
46: mult_expression -> mult_expression '/' not_expression  . 
  Reduce by 46: mult_expression -> mult_expression '/' not_expression  . 


State 96:
35: basic_expression -> '(' expression ')'  . 
  Reduce by 35: basic_expression -> '(' expression ')'  . 


State 97:
22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>'  . ';' 
  0:   On ';' to state 105


State 98:
23: ifelse_statement -> IF '(' expression ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 106
  1:   On GOTO to state 40


State 99:
42: or_expression -> or_expression '|' '|' and_expression  . 
40: and_expression -> and_expression  . '&' '&' comparison_expression 
  0:   On '&' to state 70
  Reduce by 42: or_expression -> or_expression '|' '|' and_expression  . 


State 100:
40: and_expression -> and_expression '&' '&' comparison_expression  . 
  Reduce by 40: and_expression -> and_expression '&' '&' comparison_expression  . 


State 101:
31: equality_expression -> equality_expression '=' '=' greater_than_expression  . 
28: greater_than_expression -> greater_than_expression  . '>' less_than_expression 
29: greater_than_expression -> greater_than_expression  . '>' '=' less_than_expression 
  0:   On '>' to state 73
  Reduce by 31: equality_expression -> equality_expression '=' '=' greater_than_expression  . 


State 102:
32: equality_expression -> equality_expression '!' '=' greater_than_expression  . 
28: greater_than_expression -> greater_than_expression  . '>' less_than_expression 
29: greater_than_expression -> greater_than_expression  . '>' '=' less_than_expression 
  0:   On '>' to state 73
  Reduce by 32: equality_expression -> equality_expression '!' '=' greater_than_expression  . 


State 103:
29: greater_than_expression -> greater_than_expression '>' '=' less_than_expression  . 
25: less_than_expression -> less_than_expression  . '<' arithmetic_expression 
26: less_than_expression -> less_than_expression  . '<' '=' arithmetic_expression 
  0:   On '<' to state 74
  Reduce by 29: greater_than_expression -> greater_than_expression '>' '=' less_than_expression  . 


State 104:
26: less_than_expression -> less_than_expression '<' '=' arithmetic_expression  . 
  Reduce by 26: less_than_expression -> less_than_expression '<' '=' arithmetic_expression  . 


State 105:
22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 
  Reduce by 22: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 


State 106:
23: ifelse_statement -> IF '(' expression ')' goto_statement ELSE goto_statement  . 
  Reduce by 23: ifelse_statement -> IF '(' expression ')' goto_statement ELSE goto_statement  . 



