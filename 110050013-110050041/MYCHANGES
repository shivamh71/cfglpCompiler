Submitted by : 
	Shubham Mehta - 110050013
	Shivam H Prasad - 110050041

1)  ast.hh & ast.cc
	-> We have made classes for implementing Relational Expressions, Boolean Expressions, Algebraic Expressions (though we have removed all c++ code from parser.yy for this submission)

2)	scanner.ll
	-> added regex for identifying if-else statements and goto-statements
	-> added regex for ignoring comment lines starting from "//"
	-> added regex for identifying basic arithmetic and logical operators : + - * / & | !

2)	parser.yy
	-> we extended grammar to include coditinal, logical and relational operators
	-> we also extended the grammar to include control statements : if-else and goto-statements
	-> precedence and associativity of opeartors have been taken care of in grammar by using non terminals appropriately instead of adding precedence rules (%token) at the top of parser script  [we did this using techniques taught in class]
	-> cross class (logical, relational, arithmetic) operator precedence have been taken care of

Corner cases handled
	-> if-else statement should immediately be followed by a new basic block
	-> two or more return statements are allowed within a procedure but in different basic blocks just like reference cfglp allows
	-> empty basic block is also allowed in the grammar

Files with sematic errors
	-> in assignment operation right hand side need not be difined in our implementation (because right now we just had to make the parser) but this gives semantic error [variable not declared] with reference executable
	-> in our code we can define an int variable named main but refernce implementation gives a semantic error